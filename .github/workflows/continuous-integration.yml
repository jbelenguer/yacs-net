name: ContinuousIntegration

on:
  push:
    branches: 
      - master
      - 'versions/**'
    paths-ignore:
      - 'README.md'

env:
  APP_NAME: yacs                                            # set this to your application's name
  APP_PACKAGE_PATH: './published'                           # set this to the path to your app project, defaults to the repository root
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}   # set this to access token to github.com
  GITHUB_API_KEY: ${{ github.token }}                       # set this to access token to github.com
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}               # set this to access token to nuget.org
  VERSION_MAJOR: 0
  VERSION_MINOR: 3
  VERSION_PATCH: 0
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Starting ...
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        format: 'YYYYMMDDHHmmss'

    - name: Initialize variables
      id: vars
      shell: bash
      run: |
          unset IS_DEBUG
          unset CONFIGURATION
          unset SUFFIX
          unset VERSION
          unset BUILD
          echo Branch: ${{ github.ref }}
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then 
            IS_DEBUG='false' ;
            CONFIGURATION='Release';
            SUFFIX=''; 
          else 
            IS_DEBUG='true'; 
            CONFIGURATION='Debug';
            SUFFIX='alpha${{ steps.time.outputs.time }}'
          fi
          VERSION='${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.VERSION_PATCH }}'
          BUILD='${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.VERSION_PATCH }}.${{ github.run_number }}'
          echo "Configuration: ${CONFIGURATION}"
          echo "Version: ${VERSION} (build ${BUILD})"
          echo "Using suffix: ${SUFFIX}"
          echo ::set-output name=isdebug::${IS_DEBUG}
          echo ::set-output name=configuration::${CONFIGURATION}
          echo ::set-output name=suffix::${SUFFIX}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=build::${BUILD}
        
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build 
        --configuration ${{ steps.vars.outputs.configuration }} 
        --no-restore
        -property:AssemblyVersion=${{ steps.vars.outputs.build }}
        -property:VersionPrefix=${{ steps.vars.outputs.version }}
        -property:VersionSuffix=${{ steps.vars.outputs.suffix }}
       

    - name: Pack
      run: dotnet pack --output nuget-packages --configuration ${{ steps.vars.outputs.configuration }} --include-symbols -p:SymbolPackageFormat=snupkg
      
    - name: Add NuGet sources
      run: |
        dotnet nuget add source https://nuget.pkg.github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/index.json --name github
        
    - name: NuGet push on GitHub
      run: dotnet nuget push "**/*.nupkg" --source github --api-key ${{ env.GITHUB_API_KEY }} --skip-duplicate

    - name: NuGet push on NuGet
      run: dotnet nuget push "**/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate

    - name: Upload NuGet package
      uses: actions/upload-artifact@v2.2.1
      with:
        name: ${{ env.APP_NAME }}
        path: "**/*.nupkg"
