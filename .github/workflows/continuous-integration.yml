name: ContinuousIntegration

on:
  push:
    branches: 
      - '*'
  pull_request:
    branches: 
      - '*'

env:
  APP_NAME: yacs                                            # set this to your application's name
  APP_PACKAGE_PATH: './published'                           # set this to the path to your app project, defaults to the repository root
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}   # set this to access token to github.com
  GITHUB_API_KEY: ${{ github.token }}                       # set this to access token to github.com
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}               # set this to access token to nuget.org
  CONFIGURATION: Debug
  VERSION_MAJOR: 0
  VERSION_MINOR: 1
  VERSION_PATCH: 2
  SUFFIX: ''
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Initialize workflow variables
      id: vars
      shell: bash
      run: |
          unset IS_DEBUG
          if [${{ github.ref }} == 'refs/heads/master']; then echo "It is MASTER" ; fi
    
    - name: Get Time
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        format: 'YYYYMMDDHHmmss'
      
    - name: Usage
      id: suffix
      env:
        TIME: "${{ steps.time.outputs.time }}"
      run: |
        echo $TIME
        
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Print new build number
      run: echo "Build number is ${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.VERSION_PATCH }}.${{ github.run_number }}"
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      if: github.ref != 'refs/heads/master'
      run: dotnet build 
        --configuration ${{ env.CONFIGURATION }} 
        --no-restore
        -property:AssemblyVersion=${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.VERSION_PATCH }}.${{ github.run_number }}
        -property:VersionPrefix=${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.VERSION_PATCH }}
        -property:VersionSuffix=alpha${{ steps.time.outputs.time }}
       

    - name: Pack
      run: dotnet pack --output nuget-packages --configuration ${{ env.CONFIGURATION }} --include-symbols -p:SymbolPackageFormat=snupkg
      
    - name: Add NuGet sources
      run: |
        dotnet nuget add source https://nuget.pkg.github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/index.json --name github
        
    - name: NuGet push on GitHub
      run: dotnet nuget push "**/*.nupkg" --source github --api-key ${{ env.GITHUB_API_KEY }} --skip-duplicate

    #- name: NuGet push on NuGet
    #  run: dotnet nuget push "**/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate

    - name: Upload NuGet package
      uses: actions/upload-artifact@v2.2.1
      with:
        name: ${{ env.APP_NAME }}
        path: "**/*.nupkg"
